@model Construx.App.Domain.Entities.Company
@using Construx.App.Constants
@using Microsoft.AspNetCore.Identity
@using Construx.App.Domain.Identity
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Details";
}

<div class="row" style="height: 540px;">
   <div class="col-3 d-flex flex-column justify-content-around" >
       <img src="~/uploaded/icons/placeholder-logo.png" class="rounded-lg"/>

       <div>
           <h3>Company Info:</h3>
           <hr />
           <p>@Html.DisplayNameFor(model => model.Phone): @Html.DisplayFor(model => model.Phone)</p>
           <p>@Html.DisplayNameFor(model => model.Adress): @Html.DisplayFor(model => model.Adress)</p>
           <p>Rating: Rating</p>
           <p>@Html.DisplayNameFor(model => model.Email): @Html.DisplayFor(model => model.Email)</p>
           
       </div>
   </div>

    <div class="col-4">

    </div>

    <div class="col-5">

    <!--Services-->
    <div class="col-5" style="overflow-y: auto; height: 540px;">
        <h4> SERVICES:</h4>
        @foreach (var item in Model.Services)
        {
            <div class="row m-2 p-2" style="background-color: lightgray;">
                <!--bookmark button + category-->
            <div class="col-3 d-flex flex-column align-items-center">
                    @*<a class="btn btn-secondary btn-sm d-inline-block" asp-controller="BookmarkServices" asp-action="Create">Bookmark</a>*@
                    <a class="d-inline-block" asp-controller="Services" asp-action="Index" asp-route-sortCategory="@item.Category.Name">@Html.DisplayFor(modelItem => item.Category.Name)</a>
                    <p>@Html.DisplayFor(modelItem => item.Rating)</p>
                </div>

                <!--name + description-->
            <div class="col-9 d-flex flex-column justify-content-around align-items-center">
                    <a class="d-inline-block" asp-controller="Services" asp-action="Details" asp-route-id="@item.Id"> @Html.DisplayFor(modelItem => item.Name)</a>
                    <p class="m-0">@Html.DisplayFor(modelItem => item.Description)</p>
                </div>
            </div>
        }
    </div>
</div>

<div>
    @if (User.IsInRole(UserRoles.Admin) || (User.IsInRole(UserRoles.Representative) && User.Identity.Name.Equals(Model.Representative?.User.UserName)))
    {
        <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-primary">Edit Company & Add Services</a>
    }
    <a asp-action="Index">Back to List</a>
</div>

<!--
to do:
    * fix bookmark buttons so they either automatically create a bookmark with the info of the company/service
      or redirect to Bookmark/Create with all necessary info filled in already (company/service name, etc);
    * add colors, prettify this ugly layout (RAZVAN)
-->